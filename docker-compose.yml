version: '3'

services:
  redis-master:
    image: redis:latest
    container_name: redis-master
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data/master:/data
    command: redis-server --appendonly yes
    networks:
      - app-network

  redis-replica-1:
    image: redis:latest
    container_name: redis-replica-1
    ports:
      - "6380:6379"
    volumes:
      - ./redis-data/replica1:/data
    command: redis-server --appendonly yes --replicaof redis-master 6379
    depends_on:
      - redis-master
    networks:
      - app-network

  redis-replica-2:
    image: redis:latest
    container_name: redis-replica-2
    ports:
      - "6381:6379"
    volumes:
      - ./redis-data/replica2:/data
    command: redis-server --appendonly yes --replicaof redis-master 6379
    depends_on:
      - redis-master
    networks:
      - app-network
      
  postgres:
    image: postgres:latest
    container_name: postgres-ecommerce
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
  
  flask-app:
    build: .
    container_name: flask-app
    depends_on:
      - postgres
      - redis-master
      - redis-replica-1
      - redis-replica-2
    environment:
      - POSTGRES_HOST=postgres-ecommerce
      - REDIS_MASTER_HOST=redis-master
      - REDIS_REPLICA_1_HOST=redis-replica-1
      - REDIS_REPLICA_1_PORT=6379
      - REDIS_REPLICA_2_HOST=redis-replica-2
      - REDIS_REPLICA_2_PORT=6379
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    command: python run.py
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    
volumes:
  postgres-data: 